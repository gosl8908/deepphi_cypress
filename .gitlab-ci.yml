# This file is a template, and might needs editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# schedule:
#     # Cypress Docker 이미지를 사용하여 테스트 환경을 설정합니다.
#     image: cypress/browsers:node-20.9.0-chrome-118.0.5993.88-1-ff-118.0.2-edge-118.0.2088.46-1
#     stage: test
#     script:
#         # 필요한 패키지를 설치합니다.
#         - yarn install
#         # cURL을 설치합니다.
#         - apt-get update && apt-get install curl -y
#         # 쉘 스크립트에 실행 권한을 부여합니다.
#         - chmod +x -R ./shell
#         # 쉘 스크립트 파일을 목록으로 출력합니다.
#         - ls -la ./shell
#         # 쉘 스크립트를 실행합니다.
#         - ./shell/schedule.sh

# onprem_test:
#     image: cypress/browsers:node-20.9.0-chrome-118.0.5993.88-1-ff-118.0.2-edge-118.0.2088.46-1 # Cypress Docker 이미지 사용
#     stage: test
#     script:
#         - yarn install
#         - >
#             yarn cypress run --record --key $CYPRESS_RECORD_KEY \
#               --spec "cypress/e2e/onprem_project/onprem-dashboard.cy.js"\
#               --browser chrome
